language: rust
dist: trusty
sudo: false

os:
   - linux
   - osx
   - windows

#cache deps
#cache: cargo

rust:
  - nightly
  - beta
#  - stable


env:
  global:
    - RUST_BACKTRACE=full
  matrix:
    - RELEASE="" DEBUG="--debug"
    - CLIPPY="true"
    - CARGO_AUDIT="true"
    - RUSTFMT="true"
    - RELEASE="--release"

matrix:
  fast_finish: false
  include:
# nightly + tools
    - os: linux
      rust: nightly
      env: RELEASE="" DEBUG="--debug"

    - os: linux
      rust: nightly
      env: CLIPPY="true"

    - os: linux
      rust: nightly
      env: CARGO_AUDIT="true"

    - os: linux
      rust: nightly
      env: RUSTFMT="true"

    - os: linux
      rust: nightly
      env: RELEASE="--release"

# beta
    - os: linux
      rust: beta
      env: RELEASE="" DEBUG="--debug"

    - os: linux
      rust: beta
      env: RELEASE="--release"

# osx nightly

    - os: osx
      rust: nightly
      env: RELEASE="" DEBUG="--debug"

    - os: osx
      rust: nightly
      env: RELEASE="--release"

# windows nightly

    - os: windows
      rust: nightly
      env: RELEASE="" DEBUG="--debug"

    - os: windows
      rust: nightly
      env: RELEASE="--release"


  exclude:
    - os: osx
    - os: linux
    - os: windows


script:
  - if [[ "$CARGO_AUDIT" == "true" ]]; then cargo install cargo-audit; fi
  - if [[ "$CARGO_AUDIT" == "true" ]]; then cargo audit; exit; fi
  - if [[ "$CLIPPY" == "true" ]]; then rustup component add clippy-preview --toolchain=nightly || cargo install --git https://github.com/rust-lang-nursery/rust-clippy/ --force clippy ; fi
  - if [[ "$CLIPPY" == "true" ]]; then cargo clippy --all-targets --all-features -- -D warnings ; exit ; fi
  - if [[ "$RUSTFMT" == "true" ]]; then rustup component add rustfmt-preview --toolchain=nightly || cargo install rustfmt-nightly --force || cargo install --git https://github.com/rust-lang-nursery/rustfmt/ --force; fi
  - if [[ "$RUSTFMT" == "true" ]]; then cargo fmt --all -- --check ; exit ; fi
  - cargo build --all ${RELEASE}
  - cargo test --all ${RELEASE}
  - if [[ "$RELEASE" == "" ]] &&  [[ "$TRAVIS_RUST_VERSION" == "nightly" ]]; then cargo test --features bench; fi
  - if [[ "$RELEASE" == "--release" ]] && [[ "$TRAVIS_RUST_VERSION" == "nightly" ]]; then cargo test --features bench --release; fi
  - if [[ "$RELEASE" == "--release" ]] && [[ "$TRAVIS_RUST_VERSION" == "nightly" ]]; then cargo bench; fi
  - if [[ "$RELEASE" == "--release" ]] && [[ "$TRAVIS_RUST_VERSION" == "nightly" ]]; then cargo bench --features bench; fi
  - cargo run ${RELEASE}
  - cargo install --force --path . ${DEBUG}
  - cargo-cache
  - cargo cache
  - cargo cache --help
  - cargo cache --gc --dry-run
  - cargo cache --gc
  - cargo cache --info
  - cargo cache --list-dirs
  - cargo cache --keep-duplicate-crates 10 --dry-run
  - cargo cache --keep-duplicate-crates 1  --dry-run
  - cargo cache --keep-duplicate-crates 0  --dry-run
